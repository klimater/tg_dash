import asyncio
import logging

from config import TOKKEN

import keyboards.keyboards as kb

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

bot = Bot(token=TOKKEN)
dp = Dispatcher()

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç
@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("""
–ü—Ä–∏–≤–µ—Ç —è –±–æ—Çü§ñ —É—á–µ—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–∞–ª–¥–µ.
–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É!
–í–≤–µ–¥–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É /main
""")

#–∫–æ–º–∞–Ω–¥–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@dp.message(Command("main"))
async def cmd_main(message: Message):
    await message.answer("""
–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?
""", reply_markup = kb.main)

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç —Ç–µ–∫—Å—Ç "–°–≤–æ–¥–∫–∞üìä"
@dp.message(F.text == "–°–≤–æ–¥–∫–∞üìä")
async def message_svodka(message: Message):
    await message.answer(" –°–í–û–î–ö–ê")

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç —Ç–µ–∫—Å—Ç "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—èüìù"
@dp.message(F.text == "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—èüìù")
async def message_action(message: Message):
    await message.answer("–¥–∞–Ω–Ω—ã–µ")



async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        logging.info("Bot is starting...")
        asyncio.run(main())
    except KeyboardInterrupt:
        print("exit")